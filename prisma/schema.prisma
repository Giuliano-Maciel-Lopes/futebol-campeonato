generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  email     String   @unique
  name      String
  password  String
  role      Role     @default(JOGADOR)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Cada usuário pode ser capitão de no máximo 1 time
  captainOf Team?

  // Cada usuário pode ter no máximo 1 cartinha
  player Player?
}

model Team {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  imageUrl  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Capitão do time (obrigatório, um-para-um)
  captain   User   @relation(fields: [captainId], references: [id])
  captainId String @unique @db.Uuid

  // Jogadores do time
  players Player[]
}

model Player {
  nameCart    String   @unique
  id          String   @id @default(uuid()) @db.Uuid
  position    Position
  number      Int      
  photoUrl    String?  // Foto opcional
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @unique @db.Uuid

  goals       Int      @default(0)
  assists     Int      @default(0)

  // Relação com o usuário (1 usuário → 1 cartinha)
  user        User     @relation(fields: [userId], references: [id])

  // Relação com Team
  team        Team?    @relation(fields: [teamId], references: [id])
  teamId      String?  @db.Uuid
}


enum Role {
  CAPITAO
  ADMIN
  JOGADOR
}

enum Position {
  GOLEIRO
  DEFENSOR
  MEIOCAMPO
  ATACANTE
}
